{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","this","handleKeyup","removeEventListener","event","setState","key","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKC,eAN5C,kCASE,WACEH,SAASI,oBAAoB,QAASF,KAAKC,eAV/C,yBAaE,SAAYE,GACVH,KAAKI,SAAS,CAAEP,WAAYM,EAAME,QAdtC,oBAiBE,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGN,KAAKJ,MAAMC,WAAX,mCAC+BG,KAAKJ,MAAMC,WAD1C,KAEG,kCAvBd,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.a6eb4b44.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string | null;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup(event: KeyboardEvent) {\n    this.setState({ pressedKey: event.key });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedKey\n            ? `The last pressed key is [${this.state.pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}